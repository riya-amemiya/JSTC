"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports["default"]=void 0;function _createForOfIteratorHelper(a,b){var c;if("undefined"==typeof Symbol||null==a[Symbol.iterator]){if(Array.isArray(a)||(c=_unsupportedIterableToArray(a))||b&&a&&"number"==typeof a.length){c&&(a=c);var d=0,e=function(){};return{s:e,n:function(){return d>=a.length?{done:!0}:{done:!1,value:a[d++]}},e:function(a){throw a},f:e}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var f,g=!0,h=!1;return{s:function(){c=a[Symbol.iterator]()},n:function(){var a=c.next();return g=a.done,a},e:function(a){h=!0,f=a},f:function(){try{g||null==c["return"]||c["return"]()}finally{if(h)throw f}}}}function _unsupportedIterableToArray(a,b){if(a){if("string"==typeof a)return _arrayLikeToArray(a,b);var c=Object.prototype.toString.call(a).slice(8,-1);return"Object"===c&&a.constructor&&(c=a.constructor.name),"Map"===c||"Set"===c?Array.from(a):"Arguments"===c||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(c)?_arrayLikeToArray(a,b):void 0}}function _arrayLikeToArray(a,b){(null==b||b>a.length)&&(b=a.length);for(var c=0,d=Array(b);c<b;c++)d[c]=a[c];return d}var _default=function(a,b){var d,e={name:[],out:""},f=_createForOfIteratorHelper(a.params);try{for(f.s();!(d=f.n()).done;){var g=d.value;e.name.push(g.name)}}catch(a){f.e(a)}finally{f.f()}for(var h,j=0;j<e.name.length;j++)h="",j!==e.name.length-1&&(h=","),e.out+="".concat(e.name[j]).concat(h);var i,k=_createForOfIteratorHelper(a.body.body);try{for(k.s();!(i=k.n()).done;){var l=i.value;if("VariableDeclaration"===l.type&&"VariableDeclarator"===l.declarations[0].type&&"Identifier"===l.declarations[0].id.type&&"Literal"===l.declarations[0].init.type&&(b.cash.code+="".concat(l.declarations[0].id.name,"=").concat(l.declarations[0].init.value,";")),"ExpressionStatement"===l.type&&"CallExpression"===l.expression.type&&"MemberExpression"===l.expression.callee.type&&"console"===l.expression.callee.object.name&&"log"===l.expression.callee.property.name)if("Literal"===l.expression.arguments[0].type)b.cash.code+="print(\"".concat(l.expression.arguments[0].value,"\");");else if("BinaryExpression"===l.expression.arguments[0].type){var c={name:"",raw:""};if("Identifier"===l.expression.arguments[0].left.type){var m;c.name=null===(m=l.expression.arguments[0].left)||void 0===m?void 0:m.name}if("Literal"===l.expression.arguments[0].right.type){var n;c.raw="\"".concat(null===(n=l.expression.arguments[0].right)||void 0===n?void 0:n.value,"\"")}b.cash.code+="print(".concat(c.name).concat(l.expression.arguments[0].operator).concat(c.raw,");")}"ReturnStatement"===l.type&&"BinaryExpression"===(null===l||void 0===l?void 0:l.argument.type)&&(b.cash["return"]+="".concat(l.argument.left.name," ").concat(l.argument.operator," ").concat(l.argument.right.name))}}catch(a){k.e(a)}finally{k.f()}return b.code+="def ".concat(a.id.name,"(").concat(e.out,"): ").concat(b.cash.code," return ").concat(b.cash["return"],"\n"),b};exports["default"]=_default;