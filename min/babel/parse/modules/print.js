"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports["default"]=void 0;function _createForOfIteratorHelper(a,b){var c;if("undefined"==typeof Symbol||null==a[Symbol.iterator]){if(Array.isArray(a)||(c=_unsupportedIterableToArray(a))||b&&a&&"number"==typeof a.length){c&&(a=c);var d=0,e=function(){};return{s:e,n:function(){return d>=a.length?{done:!0}:{done:!1,value:a[d++]}},e:function(a){throw a},f:e}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var f,g=!0,h=!1;return{s:function(){c=a[Symbol.iterator]()},n:function(){var a=c.next();return g=a.done,a},e:function(a){h=!0,f=a},f:function(){try{g||null==c["return"]||c["return"]()}finally{if(h)throw f}}}}function _unsupportedIterableToArray(a,b){if(a){if("string"==typeof a)return _arrayLikeToArray(a,b);var c=Object.prototype.toString.call(a).slice(8,-1);return"Object"===c&&a.constructor&&(c=a.constructor.name),"Map"===c||"Set"===c?Array.from(a):"Arguments"===c||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(c)?_arrayLikeToArray(a,b):void 0}}function _arrayLikeToArray(a,b){(null==b||b>a.length)&&(b=a.length);for(var c=0,d=Array(b);c<b;c++)d[c]=a[c];return d}var _default=function(a,b){if("CallExpression"===a.expression.type&&"MemberExpression"===a.expression.callee.type&&"console"===a.expression.callee.object.name&&"log"===a.expression.callee.property.name){var c,d=_createForOfIteratorHelper(a.expression.arguments);try{for(d.s();!(c=d.n()).done;){var e=c.value;if("Literal"===e.type&&(b.code+="print(".concat(e.raw,")")),"CallExpression"===e.type&&"Identifier"===e.callee.type){var f,g={name:[],out:""},h=_createForOfIteratorHelper(e.arguments);try{for(h.s();!(f=h.n()).done;){var j=f.value;g.name.push(j.raw)}}catch(a){h.e(a)}finally{h.f()}for(var k,l=0;l<g.name.length;l++)k="",l!==g.name.length-1&&(k=","),g.out+="".concat(g.name[l]).concat(k);b.code+="print(".concat(e.callee.name,"(").concat(g.out,"));")}"BinaryExpression"!==(null===e||void 0===e?void 0:e.type)||"BinaryExpression"!==(null===e||void 0===e?void 0:e.left.type)&&"BinaryExpression"!==(null===e||void 0===e?void 0:e.right.type)}}catch(a){d.e(a)}finally{d.f()}}return b};exports["default"]=_default;